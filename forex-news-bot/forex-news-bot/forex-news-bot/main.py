from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import requests
from bs4 import BeautifulSoup
import asyncio

# üîê –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞ (–Ω–µ –ø—É–±–ª–∏–∫—É–π –µ–≥–æ –Ω–∏–≥–¥–µ, –∫—Ä–æ–º–µ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞!)
API_TOKEN = '7910558919:AAFlI7JWP3s-MTPV6ILpzQzgnRZSBPnSyGo'

# üü¢ –£–∫–∞–∂–∏ –∑–¥–µ—Å—å —Å–≤–æ–π –∫–∞–Ω–∞–ª. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞—á–Ω–∏ —Å @ (–µ—Å–ª–∏ –æ–Ω –ø—É–±–ª–∏—á–Ω—ã–π)
CHANNEL_ID = '@forex_alerts_100k'  # –ó–∞–º–µ–Ω–∏—à—å, –∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞—à—å –∫–∞–Ω–∞–ª

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# üì• –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π —Å ForexFactory
async def fetch_forex_news():
    url = 'https://www.forexfactory.com/calendar'
    headers = {'User-Agent': 'Mozilla/5.0'}
    response = requests.get(url, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')

    important_news = []
    table = soup.find('table', {'id': 'calendar__table'})
    if not table:
        return

    rows = table.find_all('tr', class_='calendar__row')
    for row in rows:
        impact = row.find('td', class_='calendar__impact')
        if impact and 'high' in impact.get('class', []):
            time = row.find('td', class_='calendar__time').text.strip()
            title = row.find('td', class_='calendar__event').text.strip()
            country = row.find('td', class_='calendar__country').text.strip()
            currency = row.find('td', class_='calendar__currency').text.strip()

            msg = f"üî• –í–∞–∂–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å ({currency}): {title}\n‚è∞ –í—Ä–µ–º—è: {time} ({country})"
            important_news.append(msg)

    return important_news

# üîÅ –¶–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
async def scheduled_news_check():
    while True:
        news = await fetch_forex_news()
        if news:
            for n in news:
                await bot.send_message(CHANNEL_ID, n)
        await asyncio.sleep(300)  # 300 —Å–µ–∫—É–Ω–¥ = 5 –º–∏–Ω—É—Ç

# üí¨ –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ –≤–∞–∂–Ω—ã—Ö Forex-–Ω–æ–≤–æ—Å—Ç—è—Ö üßæ")

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.create_task(scheduled_news_check())
    executor.start_polling(dp, skip_updates=True)
